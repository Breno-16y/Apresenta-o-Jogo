<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Jogo de Ping Pong</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <canvas id="pingPongCanvas" width="800" height="600"></canvas>
    <script src="script.js"></script>
</body>
</html>

body {
    margin: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background: #000;
}
canvas {
    border: 1px solid #fff;
}

const canvas = document.getElementById('pingPongCanvas');
const ctx = canvas.getContext('2d');

// Configurações do jogo
const paddleWidth = 10;
const paddleHeight = 100;
const ballSize = 10;

let ballX = canvas.width / 2;
let ballY = canvas.height / 2;
let ballSpeedX = 5;
let ballSpeedY = 2;

let leftPaddleY = canvas.height / 2 - paddleHeight / 2;
let rightPaddleY = canvas.height / 2 - paddleHeight / 2;
const paddleSpeed = 5;

function draw() {
    ctx.clearRect(0, 0, canvas.width, canvas.height);

    // Desenha a bola
    ctx.fillStyle = '#fff';
    ctx.beginPath();
    ctx.arc(ballX, ballY, ballSize, 0, Math.PI * 2);
    ctx.fill();

    // Desenha as palas
    ctx.fillRect(10, leftPaddleY, paddleWidth, paddleHeight);
    ctx.fillRect(canvas.width - 20, rightPaddleY, paddleWidth, paddleHeight);

    // Move a bola
    ballX += ballSpeedX;
    ballY += ballSpeedY;

    // Colisões com as paredes
    if (ballY + ballSize > canvas.height || ballY - ballSize < 0) {
        ballSpeedY = -ballSpeedY;
    }

    // Colisões com as palas
    if (ballX - ballSize < 20 && ballY > leftPaddleY && ballY < leftPaddleY + paddleHeight) {
        ballSpeedX = -ballSpeedX;
    }
    if (ballX + ballSize > canvas.width - 20 && ballY > rightPaddleY && ballY < rightPaddleY + paddleHeight) {
        ballSpeedX = -ballSpeedX;
    }

    // Atualiza a posição das palas com base nas teclas pressionadas
    document.onkeydown = function(e) {
        switch (e.key) {
            case 'ArrowUp':
                if (rightPaddleY > 0) rightPaddleY -= paddleSpeed;
                break;
            case 'ArrowDown':
                if (rightPaddleY < canvas.height - paddleHeight) rightPaddleY += paddleSpeed;
                break;
            case 'w':
                if (leftPaddleY > 0) leftPaddleY -= paddleSpeed;
                break;
            case 's':
                if (leftPaddleY < canvas.height - paddleHeight) leftPaddleY += paddleSpeed;
                break;
        }
    };

    requestAnimationFrame(draw);
}

draw();
